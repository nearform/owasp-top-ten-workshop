import{I as m}from"./default-DAWz1zwl.js";import{_ as h,b5 as i}from"../index-DbjAHYTp.js";import{p as u,u as d,f as x}from"./context-MHM20Ows.js";import{o as g,c as v,k as w,q as k,s as $,e,a6 as r}from"../modules/vue-qLwg7mlj.js";import"../modules/shiki-DvLM4DQx.js";const y={__name:"55",setup(c,{expose:o}){o(),u(i);const{$slidev:s,$nav:t,$clicksContext:n,$clicks:a,$page:_,$renderContext:p,$frontmatter:f}=d(),l={$slidev:s,$nav:t,$clicksContext:n,$clicks:a,$page:_,$renderContext:p,$frontmatter:f,InjectedLayout:m,get frontmatter(){return i},get useSlideContext(){return d},get _provideFrontmatter(){return u},get _frontmatterToProps(){return x}};return Object.defineProperty(l,"__isScriptSetup",{enumerable:!1,value:!0}),l}},P=e("h1",null,"A07 Allowing leaked passwords ğŸ’§ (3)",-1),b=e("div",{class:"dense"},[e("ul",null,[e("li",null,"It should not allow to use passwords that are known to be leaked"),e("li",null,"Instead it should require the user to set a different password indicating what is the reason"),e("li",null,[r("Place your solution in the "),e("code",null,"routes/user/index.js")]),e("li",null,[r("Test it by running "),e("code",null,"npm run verify"),r(" (it will fail initially)")])])],-1);function C(c,o,s,t,n,a){return g(),v(t.InjectedLayout,k($(t._frontmatterToProps(t.frontmatter,54))),{default:w(()=>[P,b]),_:1},16)}const q=h(y,[["render",C],["__file","/@slidev/slides/55.md"]]);export{q as default};
